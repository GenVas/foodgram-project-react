version: '3.3'
services:
  db:
    image: postgres:12.4-alpine
    # restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../backend/.env

  frontend:
    # image: geedeega/foodgram_frontend:latest # v1.0.0
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build
    depends_on:
      - db
  
  backend:
    # image: geedeega/foodgram_backend:latest  # v1.2.1
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_value:/code/static/
      - media_value:/code/media/
    depends_on:
      - db
    env_file:
      - ../backend/.env

  nginx:
    image: nginx:1.19.3-alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/redoc.html:/usr/share/nginx/api/docs/redoc.html
      - ./docs/openapi-schema.yml:/usr/share/nginx/api/docs/openapi-schema.yml
      - static_value:/var/html/static/
      - media_value:/var/html/media/

    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  static_value:
  media_value:

